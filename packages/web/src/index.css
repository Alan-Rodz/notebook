/*
  Style Order Convention -- alphabetically ordered within their corresponding scope:
    Properties (that define element behavior)
    Layout
    Sizing
    Spacing
    Everything Else
    Handlers
*/

/* == Constant ================================================================= */
/* NOTE: Must match theme variables. (SEE: core/theme) */
:root {
  --ACTIVE_BUTTON_COLOR: #E2E8F0;
  --HOVER_BUTTON_COLOR: #EDF2F7/*currently only used through CSS file*/;
}

/* == Editor =================================================================== */
.Editor {
  outline: 1px solid transparent;
  /* NOTE: This is needed to match the styles of ProseMirror editor. */
  word-wrap: break-word;
  white-space: pre-wrap;
  white-space: break-spaces;
  -webkit-font-variant-ligatures: none;
  font-variant-ligatures: none;
  font-feature-settings: "liga" 0;
}
.inlineNodeContainer { position: relative; display: inline-block; }
.ProseMirror-selectednode > span/*target inline nodes with content (e.g. asyncNodes)*/{
  outline: 1px solid #666;
}

/* -- Node styles -------------------------------------------------------------- */
/* .. Codeblock ................................................................ */
[data-node-type="codeBlock"]{
  position: relative;
  display: flex;
  align-items: center;
  gap: 10px;
  background:#EDF2F7;
  border: 1px solid;
  border-color: #CBD5E0;
  border-radius: 4px;
}
[data-node-type="codeBlock"] > div {
  width: 100%;
  overflow: auto;
}

[data-node-type="codeBlock"] > div > p{
  min-height: 1.5em;
  font-size: 16px;
}

/* .. Visual id ................................................................ */
[data-node-type="codeBlock"]::after{
  content: attr(data-visualid);
  position: absolute;
  top: 50%;
  left: calc(100% + 8px);
  transform: translateY(-50%);
  color: rgba(0,0,0,.3);
  font-weight: 600;
}
/* .. Demo2AsyncNode ........................................................... */
[data-node-type="demo2AsyncNode"] {
  background: rgba(0,0,0,0.1);
  border-radius: 4px;
}

[data-node-type="demo2AsyncNode"].performing-async-operation{
  background: rgba(0,0,0,0.3);
}

/* NOTE: ProseMirror adds white-space: normal to non editable nodes, this causes the
         node to lose its white-space while its being executed. The solution is to
         overwrite that property on this specific case. */
.Editor [data-node-type="demo2AsyncNode"] > div > div {
  white-space: pre-wrap;
}

/* .. DemoAsyncNode ............................................................ */
[data-node-type="demoAsyncNode"] > [data-async-node-dirty] {
  border-color: red !important;
}

[data-demoasyncnodestate]::after {
  content: '';
  display: inline-block;
  width: 0.75em;
  height: 0.75em;
  margin-left: 0.35em;
  border-radius: 7.5px;
  background-color: var(--status-color);
}

/* .. Chip ..................................................................... */
.chip {
  display: inline-block;
  height: 40px;
  padding: 0 15px;
  background-color: #4299E1;
  border-radius: 40px;
  color: white;
  line-height: 40px;
  font-size: 16px;
  cursor: grab;
}

.chipCloseButton {
  margin-left: 15px;
  color: white;
  cursor: pointer;
  float: right;
  font-size: 20px;
  font-weight: bold;
}
.chipCloseButton:hover { color: red; }
.chipCloseButton:focus { color: red; }

/* .. MarkHolder ............................................................... */
[data-node-type="markHolder"] {
  /*
    prevent the User from ever setting a Selection with the Cursor that sets
    it behind a MarkHolder. This is also checked by an appendTransaction
    (SEE: MarkHolder.ts)
   */
  display: none/* do not add to PM View */;
}

/* .. Highlight ................................................................ */
.ProseMirror-focused .selected_text {
  /*only show background when editor is no longer focused*/
  background-color: transparent !important;
}
.selected_text {
  background-color: rgba(0,0,0,0.1);
}
/* .. Image .................................................................... */
/* NOTE: Using selector since images are inline nodes but do not have a NodeView */
[data-node-type="image"] {
  position: relative;
  display: inline-block;
}

/* .. Link ........................................................................ */
[data-node-type="link"] { cursor: 'inherit'; }
[data-node-type="link"].clickable { cursor: pointer; }
.clickable { cursor: pointer; }

/* .. VisualID ................................................................. */
[data-visualid]::after {
  content: attr(data-visualid);
}

/* .. Gap Cursor ............................................................... */
.ProseMirror-gapcursor {
  display: none;
  position: absolute;
  pointer-events: none;
}

.ProseMirror-gapcursor:after {
  position: absolute;
  display: block;
  top: -2px;
  width: 20px;
  margin-top: 0.25em;
  animation: ProseMirror-cursor-blink 1.1s steps(2, start) infinite;
  border-top: 1px solid black;
  content: '';
}

@keyframes ProseMirror-cursor-blink {
  to { visibility: hidden; }
}

.ProseMirror-focused .ProseMirror-gapcursor { display: block; }

/* == Toolbar ================================================================== */
.iconButton {
  width: auto;
  height: auto;

  margin-right: 0.375rem;
  padding: 0.30em;

  border-radius: 50%;
}
.iconButton.active { background-color: var(--ACTIVE_BUTTON_COLOR); }
.iconButton:hover  { background-color: var(--HOVER_BUTTON_COLOR); }

/* == Packages compatibility =================================================== */
/*
  Unfortunately a lot of packages rely on specific CSS rules to work, and in some
  cases they don't work as expected or collide with other packages, for this
  reason manual fixes must be implemented to make sure the Application styles
  works as expected
*/

/*
  Known issue that having two ChakraUI Modals open at the same time the error
  react-remove-scroll-bar error when open more than one modal is shown in the
  console. This is due to the fact that another library sets the body overflow to
  be hidden while react-remove-scroll-bar expects it to be present.

  REF: https://github.com/chakra-ui/chakra-ui/issues/6213.
  NOTE: Using html body to have more priority over the library selector.
*/
html body {
  overflow: auto !important;
}

/* == Fonts ==================================================================== */
@font-face {
  font-family: 'SourceSerifPro';
  src: local('SourceSerifPro'), url(../public/font/Source_Serif_Pro/SourceSerifPro-Regular.ttf) format('opentype');
}

@font-face {
  font-family: 'SourceSerifPro';
  font-weight: 700;
  src: local('SourceSerifPro'), url(../public/font/Source_Serif_Pro/SourceSerifPro-Bold.ttf) format('opentype');
}

@font-face {
  font-family: 'SourceSerifPro';
  font-style: italic;
  src: local('SourceSerifPro'), url(../public/font/Source_Serif_Pro/SourceSerifPro-Italic.ttf) format('opentype');
}

@font-face {
  font-family: 'SourceSerifPro';
  font-style: italic;
  font-weight: 700;
  src: local('SourceSerifPro'), url(../public/font/Source_Serif_Pro/SourceSerifPro-BoldItalic.ttf) format('opentype');
}




